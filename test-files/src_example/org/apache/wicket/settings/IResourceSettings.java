package org.apache.wicket.settings;

import org.apache.wicket.util.time.*;
import org.apache.wicket.markup.html.*;
import org.apache.wicket.resource.*;
import java.util.*;
import org.apache.wicket.resource.loader.*;
import org.apache.wicket.*;
import org.apache.wicket.util.resource.locator.*;
import org.apache.wicket.util.watch.*;
import org.apache.wicket.util.file.*;
import org.apache.wicket.javascript.*;
import org.apache.wicket.request.resource.caching.*;
import org.apache.wicket.css.*;

public interface IResourceSettings extends IPropertiesFactoryContext{
    void addResourceFactory(String p0,IResourceFactory p1);
    void addResourceFolder(String p0);
    Duration getDefaultCacheDuration();
    IPackageResourceGuard getPackageResourceGuard();
    IPropertiesFactory getPropertiesFactory();
    IResourceFactory getResourceFactory(String p0);
    IResourceFinder getResourceFinder();
    Duration getResourcePollFrequency();
    List<IStringResourceLoader> getStringResourceLoaders();
    boolean getThrowExceptionOnMissingResource();
    boolean getUseDefaultOnMissingResource();
    void setDefaultCacheDuration(Duration p0);
    void setLocalizer(Localizer p0);
    void setPackageResourceGuard(IPackageResourceGuard p0);
    void setPropertiesFactory(IPropertiesFactory p0);
    void setResourceFinder(IResourceFinder p0);
    void setResourcePollFrequency(Duration p0);
    void setResourceStreamLocator(IResourceStreamLocator p0);
    void setResourceWatcher(IModificationWatcher p0);
    void setFileCleaner(IFileCleaner p0);
    IFileCleaner getFileCleaner();
    void setThrowExceptionOnMissingResource(boolean p0);
    void setUseDefaultOnMissingResource(boolean p0);
    IJavaScriptCompressor setJavaScriptCompressor(IJavaScriptCompressor p0);
    IJavaScriptCompressor getJavaScriptCompressor();
    String getParentFolderPlaceholder();
    void setParentFolderPlaceholder(String p0);
    IResourceCachingStrategy getCachingStrategy();
    void setCachingStrategy(IResourceCachingStrategy p0);
    ICssCompressor setCssCompressor(ICssCompressor p0);
    ICssCompressor getCssCompressor();
    boolean isEncodeJSessionId();
    void setEncodeJSessionId(boolean p0);
}
